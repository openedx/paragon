@import "variables";
@import "bootstrap-forms";
@import "input-group";
@import "bootstrap-custom-forms";
@import "mixins";
@import "FormText";
@import "FormControlSet";

// A form input state used by the now deprecate Fieldset and asInput
// we can remove this when they are deleted.
.form-control.is-invalid.is-invalid-nodanger {
  @include form-control-focus(true);

  border-color: var(--pgn-color-form-input-border);
}

.form-control:hover {
  border: solid var(--pgn-size-form-input-width-hover) var(--pgn-color-dark-700);
}

.pgn__form-group {
  margin-bottom: var(--pgn-spacing-form-group-margin-bottom);
  text-align: start;

  .form-check {
    [dir="rtl"] & {
      padding-left: 0;
      padding-right: 1.25rem;
    }

    [dir="rtl"] & .form-check-input {
      margin-left: 0;
      margin-right: -1.25rem;
    }
  }
}

// FormControlDecoratorGroup

.pgn__form-control-decorator-group {
  position: relative;
  display: flex;
  flex-grow: 1;
  align-items: flex-start;

  @media (--min-pgn-size-breakpoint-sm) {
    margin-inline-end: var(--pgn-spacing-form-control-gutter);
  }

  &.has-prepended-node {
    .form-control {
      padding-inline-start:
        calc(
          var(--pgn-spacing-form-input-padding-x-base) + var(--pgn-size-form-control-icon-width)
        );

      [dir="rtl"] & {
        background-position: left var(--pgn-spacing-form-control-select-icon-padding) center;
      }
    }

    .form-control-lg {
      padding-inline-start:
        calc(
          var(--pgn-spacing-form-input-padding-x-lg) + var(--pgn-size-form-control-icon-width)
        );
    }

    .form-control-sm {
      padding-inline-start:
        calc(
          var(--pgn-spacing-form-input-padding-x-sm) + var(--pgn-size-form-control-icon-width)
        );
    }
  }

  &.has-appended-node {
    .form-control {
      padding-inline-end:
        calc(
          var(--pgn-spacing-form-input-padding-x-base) + var(--pgn-size-form-control-icon-width)
        );
    }

    .form-control-lg {
      padding-inline-end:
        calc(
          var(--pgn-spacing-form-input-padding-x-lg) + var(--pgn-size-form-control-icon-width)
        );
    }

    .form-control-sm {
      padding-inline-end:
        calc(
          var(--pgn-spacing-form-input-padding-x-sm) + var(--pgn-size-form-control-icon-width)
        );
    }
  }

  font-size: var(--pgn-typography-form-input-font-size-base);
  line-height: var(--pgn-typography-form-input-line-height-base);

  &.pgn__form-control-decorator-group-sm {
    font-size: var(--pgn-typography-form-input-font-size-sm);
    line-height: var(--pgn-typography-form-input-line-height-sm);
  }

  &.pgn__form-control-decorator-group-lg {
    font-size: var(--pgn-typography-form-input-font-size-lg);
    line-height: var(--pgn-typography-form-input-line-height-lg);
  }
}

// Control Decorators

.pgn__form-control-decorator {
  position: absolute;
  pointer-events: none;

  button {
    pointer-events: initial;
  }

  height: var(--pgn-size-form-input-height-base);
  min-width: var(--pgn-size-form-input-height-base);
  line-height: inherit;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: inherit;

  &.pgn__form-control-decorator-leading {
    inset-inline-start: 0;
    padding-inline-start: var(--pgn-spacing-form-input-padding-x-base);
    padding-inline-end: calc(var(--pgn-spacing-form-input-padding-x-base) / 2);
  }

  &.pgn__form-control-decorator-trailing {
    inset-inline-end: 0;
    padding-inline-start: calc(var(--pgn-spacing-form-input-padding-x-base) / 2);
    padding-inline-end:
      calc(
        var(--pgn-spacing-form-input-padding-y-sm) - calc(2 * var(--pgn-size-form-input-width-border))
      );
  }

  .pgn__form-control-decorator-group-lg & {
    height: var(--pgn-size-form-input-height-lg);
    min-width: var(--pgn-size-form-input-height-lg);

    &.pgn__form-control-decorator-leading {
      padding-left: var(--pgn-spacing-form-input-padding-x-lg);
      padding-right: calc(var(--pgn-spacing-form-input-padding-x-lg) / 2);
    }

    &.pgn__form-control-decorator-trailing {
      padding-left: calc(var(--pgn-spacing-form-input-padding-x-lg) / 2);
      padding-right:
        calc(
          var(--pgn-spacing-form-input-padding-y-base) - (2 * var(--pgn-size-form-input-width-border))
        );
    }
  }

  .pgn__form-control-decorator-group-sm & {
    height: var(--pgn-size-form-input-height-sm);
    min-width: var(--pgn-size-form-input-height-lg);

    &.pgn__form-control-decorator-leading {
      padding-left: var(--pgn-spacing-form-input-padding-x-sm);
      padding-right: calc(var(--pgn-spacing-form-input-padding-x-sm) / 2);
    }

    &.pgn__form-control-decorator-trailing {
      padding-left: calc(var(--pgn-spacing-form-input-padding-x-sm) / 2);
      padding-right: calc(var(--pgn-spacing-form-input-padding-y-sm) - (2 * var(--pgn-size-form-input-width-border)));
    }
  }

  .btn-icon {
    color: var(--pgn-color-gray-500) !important;

    &:hover {
      background-color: var(--pgn-color-gray-500) !important;
      color: var(--pgn-color-white) !important;
    }

    &:focus {
      background-color: var(--pgn-color-white) !important;
      color: var(--pgn-color-gray-500) !important;
      box-shadow: inset 0 0 0 2px var(--pgn-color-gray-500) !important;
    }
  }
}

// Floating Labels

.pgn__form-control-floating-label {
  position: absolute;
  inset-inline-start: var(--pgn-size-form-input-width-border);
  inset-inline-end: 0;
  display: flex;
  width: 100%;
  height: 100%;
  pointer-events: none;

  .pgn__form-control-floating-label-content {
    border-top: solid 2px transparent;
    position: relative;
    inset-inline-start: -.5em;
    max-width: 100%;
  }

  .pgn__form-control-floating-label-text {
    transform-origin: left top;
    padding: 0 .5em;
    transition: transform 150ms ease, background-color 150ms linear;

    // Prevent background-color from being output as "transparent"
    // Firefox doesn't handle the first animation well from transparent to
    // a color. Adding an alpha channel smooths it out.
    background-color: var(--pgn-color-form-control-label-floating-text);
    white-space: nowrap;
    max-width: 75vw;
    display: block;
    overflow: hidden;
    text-overflow: ellipsis;

    [dir="rtl"] & {
      transform-origin: right top;
    }
  }

  .has-leading-element & {
    .pgn__form-control-floating-label-text {
      transform: translateX(var(--pgn-size-form-control-icon-width));

      [dir="rtl"] & {
        transform: translateX(calc(-1 * var(--pgn-size-form-control-icon-width)));
      }
    }
  }

  @include form-control-floating-label-initial(
    var(--pgn-spacing-form-input-padding-x-base),
    var(--pgn-spacing-form-input-padding-y-base),
    var(--pgn-typography-form-input-line-height-base),
    var(--pgn-typography-form-input-font-size-base),
    var(--pgn-size-form-input-width-border)
  );

  .pgn__form-control-decorator-group-lg & {
    @include form-control-floating-label-initial(
      var(--pgn-spacing-form-input-padding-x-lg),
      var(--pgn-spacing-form-input-padding-y-lg),
      var(--pgn-typography-form-input-line-height-lg),
      var(--pgn-typography-form-input-font-size-lg),
      var(--pgn-size-form-input-width-border)
    );
  }

  .pgn__form-control-decorator-group-sm & {
    @include form-control-floating-label-initial(
      var(--pgn-spacing-form-input-padding-x-sm),
      var(--pgn-spacing-form-input-padding-y-sm),
      var(--pgn-typography-form-input-line-height-sm),
      var(--pgn-typography-form-input-font-size-sm),
      var(--pgn-size-form-input-width-border)
    );
  }

  .form-control:focus ~ &,
  // select.form-control ~ &,
  .form-control.has-value ~ & {
    .pgn__form-control-floating-label-text {
      background-color: var(--pgn-color-form-input-bg-base);
    }

    @include form-control-floating-label-float(
      var(--pgn-spacing-form-input-padding-x-base),
      var(--pgn-spacing-form-input-padding-y-base),
      var(--pgn-typography-form-input-line-height-base),
      var(--pgn-typography-form-input-font-size-base),
      var(--pgn-size-form-input-width-border)
    );
  }

  .float-label.pgn__form-control-decorator-group-lg & {
    @include form-control-floating-label-float(
      var(--pgn-spacing-form-input-padding-x-lg),
      var(--pgn-spacing-form-input-padding-y-lg),
      var(--pgn-typography-form-input-line-height-lg),
      var(--pgn-typography-form-input-font-size-lg),
      var(--pgn-size-form-input-width-border)
    );
  }

  .float-label.pgn__form-control-decorator-group-sm & {
    @include form-control-floating-label-float(
      var(--pgn-spacing-form-input-padding-x-sm),
      var(--pgn-spacing-form-input-padding-y-sm),
      var(--pgn-typography-form-input-line-height-sm),
      var(--pgn-typography-form-input-font-size-sm),
      var(--pgn-size-form-input-width-border)
    );
  }
}

.pgn__form-control-decorator-group.has-floating-label {
  input[type="date"],
  input[type="time"] {
    [dir="rtl"] & {
      text-align: right;
    }

    &:not(:focus):not(.has-value) {
      color: transparent;
    }

    &::-webkit-calendar-picker-indicator {
      [dir="rtl"] & {
        position: absolute;
        left: 0;
      }
    }
  }

  .form-control:not(:focus):not(.has-value) {
    &::placeholder,
    &::-webkit-datetime-edit {
      opacity: 0;
    }
  }

  select.form-control:not(.has-value):not(:focus) {
    // color: rgba(0,0,0,0); Force the rgba syntax to appear in the output rather
    // than transparent. IE11 does not understand color: transparent here.
    color: unquote("rgba(0,0,0,0)");
  }
}

select.form-control {
  padding-inline-end: calc(var(--pgn-spacing-form-control-select-icon-padding) + 2rem);
  background-image: var(--pgn-other-content-form-control-select-indicator-icon);
  background-position: right var(--pgn-spacing-form-control-select-icon-padding) center;
  background-repeat: no-repeat;
  background-size: 24px 24px;
  appearance: none;

  [dir="rtl"] & {
    background-position: left var(--pgn-spacing-form-control-select-icon-padding) center;
  }
}

// Regular Form Label

.pgn__form-label {
  font-size: var(--pgn-typography-form-input-font-size-base);
  display: inline-block;
  margin-bottom: .5rem;

  &.pgn__form-label-inline {
    display: inline-block;
    margin: 0 1em 0 0;

    [dir="rtl"] & {
      margin: 0 0 0 1em;
    }
  }

  &.pgn__form-label-lg {
    font-size: var(--pgn-typography-form-input-font-size-lg);
  }

  &.pgn__form-label-sm {
    font-size: var(--pgn-typography-form-input-font-size-sm);
  }
}

// Checkbox, Radio, Switch

.pgn__form-checkbox-input,
.pgn__form-radio-input,
.pgn__form-switch-input {
  appearance: none;
  height: var(--pgn-size-form-control-indicator-base);
  width: var(--pgn-size-form-control-indicator-base);
  background-color: var(--pgn-color-form-control-indicator-bg-base);
  border:
    solid var(--pgn-size-form-control-indicator-border-width)
    var(--pgn-color-form-control-indicator-border);
  border-radius: var(--pgn-size-form-control-border-checkbox-indicator-radius) radius;
  margin-inline-end: var(--pgn-spacing-form-control-gutter);
  background-position: center;

  &:not(:disabled) {
    cursor: pointer;
  }

  &:not(:disabled):hover {
    box-shadow: var(--pgn-elevation-form-control-indicator-checked-focus);
  }

  &:disabled {
    opacity: .3;
  }

  &:checked {
    border-color: var(--pgn-color-form-control-indicator-checked-border-base);
  }
}

.pgn__form-checkbox-input {
  &:checked {
    background-image: var(--pgn-other-content-form-control-checkbox-indicator-icon-checked-base);
  }

  &:indeterminate {
    background-image: var(--pgn-other-content-form-control-checkbox-indicator-indeterminate-icon);
  }
}

.pgn__form-checkbox-input,
.pgn__form-radio-input {
  &:focus {
    position: relative;
    outline: none;
    box-shadow: none;
    text-decoration: none;
    border-color: var(--pgn-color-form-input-focus-border);
  }

  &:focus::before {
    content: "";
    position: absolute;
    top: calc(var(--pgn-spacing-form-check-position-axis) * -1);
    right: calc(var(--pgn-spacing-form-check-position-axis) * -1);
    bottom: calc(var(--pgn-spacing-form-check-position-axis) * -1);
    left: calc(var(--pgn-spacing-form-check-position-axis) * -1);
    border: var(--pgn-size-form-border-radius-width) solid var(--pgn-color-form-input-focus-border);
    border-radius: var(--pgn-size-form-border-radius-check-focus);
  }
}

.pgn__form-switch-input {
  width: var(--pgn-size-form-control-switch-width);
  border-radius: var(--pgn-size-form-control-switch-indicator-border-radius);
  background-image: var(--pgn-other-content-form-control-switch-indicator-icon-off);
  background-position: left center;
  background-repeat: no-repeat;
  transition: background 150ms ease;

  &:checked {
    background-position: right center;
    background-color: var(--pgn-color-form-control-switch-indicator-checked-bg);
    background-image: var(--pgn-other-content-form-control-switch-indicator-icon-on);
  }

  &:indeterminate {
    background-position: center;
    background-image: var(--pgn-other-content-form-control-switch-indicator-icon-off);
  }
}

.pgn__form-switch-helper-text {
  color: var(--pgn-color-gray-500);
  font-size: var(--pgn-typography-font-size-xs);
  margin-top: .25rem;
}

.pgn__form-radio-input {
  border-radius: var(--pgn-size-form-control-border-radio-indicator-radius);

  &:checked {
    background-image: var(--pgn-other-content-form-control-radio-indicator-icon-checked-base);
  }

  &:focus {
    border-color: var(--pgn-color-black);

    &::before {
      border-radius: var(--pgn-size-form-control-border-radio-indicator-radius);
    }
  }
}

.pgn__form-checkbox,
.pgn__form-switch,
.pgn__form-radio {
  display: inline-flex;

  .pgn__form-label {
    display: flex;
    align-items: center;
    margin-bottom: 0;
    line-height: var(--pgn-size-form-control-indicator-base);
  }

  input:disabled ~ * {
    opacity: .3;
  }

  &.pgn__form-control-invalid input {
    border-color: var(--pgn-color-form-feedback-invalid);
  }

  &.pgn__form-control-valid input {
    border-color: var(--pgn-color-form-feedback-valid);
  }

  &.pgn__form-control-label-left {
    .pgn__form-label {
      order: 1;
      margin-inline-end: var(--pgn-spacing-form-control-gutter);
    }

    input {
      order: 2;
    }
  }
}

.pgn__form-checkbox {
  &.pgn__form-control-invalid input {
    &:checked {
      background-image: var(--pgn-other-content-form-control-checkbox-indicator-icon-checked-invalid);
    }
  }

  &.pgn__form-control-valid input {
    &:checked {
      background-image: var(--pgn-other-content-form-control-checkbox-indicator-icon-checked-valid);
    }
  }
}

.pgn__form-radio {
  &.pgn__form-control-invalid input {
    &:checked {
      background-image: var(--pgn-other-content-form-control-radio-indicator-icon-checked-invalid);
    }
  }

  &.pgn__form-control-valid input {
    &:checked {
      background-image: var(--pgn-other-content-form-control-radio-indicator-icon-checked-valid);
    }
  }
}

.input-group > .input-group-prepend > .btn,
.input-group > .input-group-prepend > .input-group-text,
.input-group:not(.has-validation) > .input-group-append:not(:last-child) > .btn,
.input-group:not(.has-validation) > .input-group-append:not(:last-child) > .input-group-text,
.input-group.has-validation > .input-group-append:nth-last-child(n+3) > .btn,
.input-group.has-validation > .input-group-append:nth-last-child(n+3) > .input-group-text,
.input-group > .input-group-append:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group > .input-group-append:last-child > .input-group-text:not(:last-child) {
  [dir="rtl"] & {
    border-radius: 0 var(--pgn-size-form-input-radius-border-base) var(--pgn-size-form-input-radius-border-base) 0;
  }
}

.input-group > .input-group-append > .btn,
.input-group > .input-group-append > .input-group-text,
.input-group > .input-group-prepend:not(:first-child) > .btn,
.input-group > .input-group-prepend:not(:first-child) > .input-group-text,
.input-group > .input-group-prepend:first-child > .btn:not(:first-child),
.input-group > .input-group-prepend:first-child > .input-group-text:not(:first-child) {
  [dir="rtl"] & {
    border-radius: var(--pgn-size-form-input-radius-border-base) 0 0 var(--pgn-size-form-input-radius-border-base);
  }
}

.pgn__form-autosuggest__wrapper {
  position: relative;

  .pgn__form-control-decorator .btn-icon {
    &:hover {
      fill: var(--pgn-color-white);
    }

    &:focus {
      fill: var(--pgn-color-gray-500);
    }
  }

  .form-control {
    min-height: 2.75rem;
  }

  .pgn__icon.btn-icon__icon {
    height: var(--pgn-size-form-autosuggest-icon-height);
    width: var(--pgn-size-form-autosuggest-icon-width);
  }

  .pgn__form-autosuggest__dropdown {
    @include pgn-box-shadow(1, "centered");

    @media (--min-pgn-size-breakpoint-sm) {
      margin-inline-end: var(--pgn-spacing-form-control-gutter);
    }

    border-radius: var(--pgn-size-border-radius-sm);
    max-height: 15rem;
    overflow-y: scroll;
    position: absolute;
    background-color: var(--pgn-color-white);
    width: calc(100% - .5rem);
    z-index: var(--pgn-elevation-dropdown-zindex);
    top: 3.125rem;

    .dropdown-item {
      display: block;
      text-align: start;
      max-width: 100%;
      padding: .625rem 1rem;
      overflow: hidden;
      text-overflow: ellipsis;

      &:active {
        color: var(--pgn-color-white);
      }
    }

    .pgn__form-autosuggest__dropdown-loading {
      padding: 6.25rem 0;
      text-align: center;

      .spinner-border {
        width: var(--pgn-size-form-autosuggest-spinner-width);
        height: var(--pgn-size-form-autosuggest-spinner-height);
        border: var(--pgn-size-form-autosuggest-border-width) solid var(--pgn-color-black);
        border-right-color: transparent;
      }
    }
  }
}
