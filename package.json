{
  "name": "@edx/paragon",
  "version": "20.12.0",
  "description": "Accessible, responsive UI component library based on Bootstrap.",
  "main": "dist/index.js",
  "module": "dist/index.js",
  "license": "Apache-2.0",
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/openedx/paragon.git"
  },
  "files": [
    "/dist",
    "/icons",
    "/src",
    "/scss"
  ],
  "sideEffects": false,
  "scripts": {
    "generate-component-install": "cd component-generator && npm install",
    "consumer-app-install": "cd example && npm install",
    "doc-site-install": "cd www && npm install",
    "install-all": "npm install && npm run generate-component-install && npm run consumer-app-install && npm run doc-site-install",
    "build": "make build",
    "build-docs": "cd ./www && \"$npm_execpath\" install && \"$npm_execpath\" run build",
    "build-docs:with-theme": "cd ./www && \"$npm_execpath\" install && \"$npm_execpath\" run build:with-theme",
    "commit": "commit",
    "debug-test": "node --inspect-brk node_modules/.bin/jest --runInBand --coverage",
    "stylelint": "stylelint \"src/**/*.scss\" \"scss/**/*.scss\" \"www/src/**/*.scss\" --config .stylelintrc.json",
    "lint": "npm run stylelint && eslint --ext .js --ext .jsx --ext .ts --ext .tsx . && npm run generate-component-lint",
    "prepublishOnly": "npm run build",
    "semantic-release": "semantic-release",
    "snapshot": "jest --updateSnapshot",
    "start": "echo 'To start the Paragon documentation site: cd www/ && npm i && npm start'",
    "test": "jest --coverage",
    "test:watch": "npm run test -- --watch",
    "generate-component": "cd component-generator && npm start",
    "generate-component-lint": "cd component-generator && npm run lint",
    "generate-changelog": "node generate-changelog.js",
    "i18n_compile": "formatjs compile-folder --format transifex ./src/i18n/messages ./src/i18n/messages",
    "i18n_extract": "formatjs extract 'src/**/*.{jsx,js,tsx,ts}' --out-file ./src/i18n/transifex_input.json --format transifex",
    "type-check": "tsc --noEmit",
    "type-check:watch": "npm run type-check -- --watch",
    "build-types": "tsc --emitDeclarationOnly"
  },
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "^6.1.1",
    "@fortawesome/react-fontawesome": "^0.1.18",
    "@popperjs/core": "^2.11.4",
    "bootstrap": "^4.6.2",
    "classnames": "^2.3.1",
    "email-prop-type": "^3.0.0",
    "file-selector": "^0.6.0",
    "font-awesome": "^4.7.0",
    "glob": "^8.0.3",
    "lodash.uniqby": "^4.7.0",
    "mailto-link": "^2.0.0",
    "prop-types": "^15.8.1",
    "react-bootstrap": "^1.6.5",
    "react-dropzone": "^14.2.1",
    "react-focus-on": "^3.5.4",
    "react-loading-skeleton": "^3.1.0",
    "react-popper": "^2.2.5",
    "react-proptype-conditional-require": "^1.0.4",
    "react-responsive": "^8.2.0",
    "react-table": "^7.7.0",
    "react-transition-group": "^4.4.2",
    "tabbable": "^5.3.3",
    "uncontrollable": "^7.2.1"
  },
  "peerDependencies": {
    "react": "^16.8.6 || ^17.0.0",
    "react-dom": "^16.8.6 || ^17.0.0",
    "react-intl": "^5.25.1"
  },
  "devDependencies": {
    "@babel/cli": "^7.16.8",
    "@babel/core": "^7.17.8",
    "@babel/eslint-parser": "^7.18.2",
    "@babel/plugin-proposal-class-properties": "^7.16.7",
    "@babel/plugin-proposal-object-rest-spread": "^7.16.7",
    "@babel/preset-env": "^7.16.8",
    "@babel/preset-react": "^7.16.7",
    "@babel/preset-typescript": "^7.16.7",
    "@edx/browserslist-config": "1.1.0",
    "@edx/eslint-config": "^3.1.0",
    "@edx/stylelint-config-edx": "^2.2.0",
    "@formatjs/cli": "^5.0.2",
    "@semantic-release/changelog": "^6.0.1",
    "@semantic-release/git": "^10.0.1",
    "@testing-library/jest-dom": "^5.16.3",
    "@testing-library/react": "^12.1.4",
    "@testing-library/user-event": "^13.5.0",
    "@types/enzyme": "^3.10.12",
    "@types/jest": "^27.5.0",
    "@types/react": "17.0.0",
    "@types/react-dom": "17.0.11",
    "@types/react-test-renderer": "^18.0.0",
    "@typescript-eslint/eslint-plugin": "^5.22.0",
    "@typescript-eslint/parser": "^5.22.0",
    "@wojtekmaj/enzyme-adapter-react-17": "^0.6.7",
    "axios": "^0.27.2",
    "axios-mock-adapter": "^1.21.1",
    "babel-jest": "^28.1.2",
    "babel-loader": "^8.2.4",
    "commander": "^9.3.0",
    "enzyme": "^3.9.0",
    "eslint": "8.18.0",
    "eslint-config-airbnb": "19.0.4",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-jsx-a11y": "6.5.1",
    "eslint-plugin-react": "7.30.0",
    "eslint-plugin-react-hooks": "4.6.0",
    "husky": "^8.0.1",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^28.1.3",
    "jest-cli": "^28.1.2",
    "jest-environment-jsdom": "^28.1.2",
    "markdown-loader-jest": "^0.1.1",
    "react": "^17.0.0",
    "react-dom": "^17.0.0",
    "react-test-renderer": "^17.0.0",
    "regenerator-runtime": "^0.13.9",
    "sass": "^1.32.13",
    "semantic-release": "^19.0.3",
    "stylelint": "^14.7.1",
    "stylelint-config-standard-scss": "^4.0.0",
    "ts-jest": "^28.0.7",
    "typescript": "^4.7.4"
  },
  "jest": {
    "testEnvironment": "jsdom",
    "transform": {
      "^.+\\.md?$": "markdown-loader-jest",
      "^.+\\.jsx?$": "babel-jest",
      "^icons/index.js$": "babel-jest",
      "^.+\\.tsx?$": "ts-jest"
    },
    "setupFiles": [
      "./src/setupTest.js"
    ],
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
      "\\.(css|scss)$": "identity-obj-proxy"
    },
    "collectCoverageFrom": [
      "src/**/*.{js,jsx,ts,tsx}"
    ],
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      "src/setupTest.js",
      "src/index.js",
      "/tests/",
      "/www/",
      "/dist/"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/www/",
      "/dist/",
      "/dependent-usage-analyzer/",
      "/component-generator/"
    ],
    "transformIgnorePatterns": [
      "/node_modules/(?!(@edx/paragon)/).*/"
    ]
  },
  "browserslist": [
    "extends @edx/browserslist-config"
  ],
  "husky": {
    "hooks": {
      "pre-commit": "npm run lint"
    }
  }
}
